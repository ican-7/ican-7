CSS：Cascading Sytle Sheets
<style></style> 嵌套于head中
练习时css内容在style中展现 ，结构与样式并没有完全分离    

选择器 {样式;}   **以分号结尾
p {color: red;font-size: 12px;}
<p>有点意思</p>

选择器
        基础选择器：
1.标签选择器：标签名。
2.类选择器：.red {}    **多次使用 与样式搭配
                    <div class="red"></div>
      多类名：<div class="red font-size"></div> 空格隔开
3.id选择器：#pink {}    **只能调用一次 与js搭配
                    <div id="pink"></div>
4.通配符选择器：* {}   不需要调用，    修改所有

文字属性
body {font-family: 'Microsoft YaHei',tahoma,arial;}  定义字体 按字体顺序展现若有选其一
body {font-size: 16px;}  文字大小  标题标签需要单独指定像素  
body {font-weight: bold;}  文字粗细  可用num norma=400;bold=700;
body {font-style: italic;} 文字风格 斜体    可修改倾斜成不倾斜normal
文字复合属性写法：
        body { font: font-style font-weight font-size/height font-family;}  强制顺序
such as:  body { font: italic 700 16px/28px 'Microsoft yahei';}  必需有size和family两个属性

文本属性
color: red or #ff0000 or rgb(255,0,0);
text-align: center or left or right; 
text-decoration: underline or overline or line-through or none;
text-indent: 10px or 2em;  缩进首行  em=1个当前文字像素
line-height: 26px;  行间距  本质上是文字的上下间距变化

css样式表
1.行内样式(行内式)  <div style="color: red; font-size: 12px;">青春不常在</div>
2.内部样式(嵌入式)  即写入<style></style>中，可放在html的任何地方
3.外部样式(链接式)  **最重要
        a.建立.css文件；
        b.html中 <link rel="stylesheet" href="url">；

emmet语法    tab
html语法：
	单词=生成标签
	单词*数=多次生成
	ul>li=直接生成父子级
	p.nav=<p class="nav"></p>
	p#two=<p id="two"></p>
	.demo$*5=5个有序不同的<div class="demo"></div><div class="demo1"></div>...
	div{123}=<div>123</div>
	div{$}*5=<div>1</div><div>2</div>...    $是自增符号
css语法：
	会列出可能想要信息，自行确定
ctrl k,ctrl f=格式化文档
	
	复合选择器
1.后代选择器：.nav li a {color: pink}  可逐渐选择后代
2.子选择器：.nav>a {}  只能选择下一代
3.并集选择器：div, p {}  同合
		   div, p, .pig li {}    书写每个分行(竖着写)
4.伪类选择器：“：”
	链接伪类：link、visited、*hover、active
	love hate	     未访问、已访问、指针放上面、鼠标按下未弹起
	input:focus {} 伪类选择器  光标样式

元素显示
块元素：<div><h><ul><p><li>    和父辈一样宽  宽高可设
行内元素：<a><span><del><strong><em>    宽高不可改
行内块元素：<img><input><td>  可控宽高，一行可放多个
模式转化：display: block  转化成块元素
	       display: inline 转化成行内元素
	       dispaly:inline-block  转化成行内块元素

行高=盒高：垂直居中

背景：
background-image: url();
background-repeat: repeat or no-repeat or repeat-x or repeat-y
background-position: (left right center) (top bottom center)   写一个默认另一个center
			      20px 50px  第一个是x，第二个是y
			      20px top
background-attachment: scroll or fixed
复合：background: black url() no-repeat fixed center top;
背景半透明 background: rgba(0,0,0,.5);    a=alpha

三大特性：
	层叠性：冲突，就近原则。
	继承性：父辈属性传子辈。
		  行高继承：父font: 12px/1.5 "宋体“;
			         子font-size: 14px; (font-height=21px)
	优先级：选择器权重：继承*|<>|.|#|行内|!impoetant
		！important   color: red !important;
	              权重 0，0，0，0
		    权重具有累加性 0，0，1，2  不会近位 0，0，0，12

盒子模型：border padding都会影响盒子大小
           边框	border-width: 5px;
           	border-style: solid or dashed or dotted; 
           	border-color: pink;
	        简写：border: 1px solid red  不用顺序
		        border-top or bottom or left or right: ...
	padding-left or right or top or bottom: 40px;
	padding复合：
		padding: 5px;    上下左右
		padding: 5px 10px; 上下 左右
		padding: 5px 10px 20px;  上 左右 下
		padding: 5px 10px 20px 30px; 上 右 下 左
	margin(外边距)：
		margin-top or bottom or left or right 
		复合和padding完全相同
		margin: 0 auto;    auto=自动，显示居中
		
border_collapse: collapse  合并边框
父辈嵌套外边距塌陷：
	1.父亲多一个border
	2.父亲多一个padding
	**3.父亲多overflow:hidden;
消除内外边距：
	* {margin: 0; padding: 0;}    css第一行代码
消除li小圆点：li {list-style: none;}

*圆角边框：
	border-radius:  10px；  radius=半径
	border-radius: 50%;  正方形->圆
	border-radius: 10px 20px 30px 40px; 左上，右上，右下，左下
	border-top-left-radius: 10px;  左上
*盒子阴影：
	box-shadow: h-shadow v-shadow blur spread color inset;
			水平           竖直           虚实    大小       颜色      内阴影
文字阴影：
	text-shadow: h-shadow v-shadow blue spread;

css浮动
网页=标准流+浮动+定位：纵向排列找标准，横向排列找浮动

浮动：可直接对块级元素控制
	flot: left or right;
**浮动特性：
	脱标：1.脱离标准流控制
	     2.不再保留原来的位置，原位由其他标准流占据
	顶排性：根据第一个浮动盒子的顶端对齐，碰边缘自动换行
	具有行内块元素特点：可设置宽高
			     未设宽高则根据内容撑宽高
浮动与标准流父元素搭配

清除浮动：  父盒子不宜添加高度时需要清楚浮动
	1.额外标签法： clear: both;  尾部新添标签必须是块元素
	2.**父元素添加overflow: hidden;
	3.**父元素添加：after伪元素
		.clearfix:after {content: "";
				display: block;
				height: 0;
				clear: both;
				visibility: hidden;
				 }
		.clearfix { *zoom: 1; }
            <div class="box clearfix">
	4.***父元素添加双伪元素
		.clearfix: before,.clearfix: after {
			content: "";
			display: table;
			}
		.clearfix: after {
			clear: both;
			}
		.clearfix {
			*zoom: 1;
			}

            <div class="box clearfix">

实际开发中：
	***nav导航栏，不直接用链接a,而是用li包含a
	直接用a，易被搜索引擎判为堆砌关键字而引发降权，影响网站排名

	按钮有边框有时需要全部去掉
	一浮全浮
	行内块元素之间有缝隙，可用浮动消除
	浮动的盒子不会有外边距合并的塌陷问题
	把ul的宽度弄得足够宽，浮动的li就不会掉下来
	盒子中放入大一点的图片需要设置img width: 100%;
css属性书写顺序：
	1.布局定位属性： display float position clear visibility overflow
	2.自身属性：width height margin padding border background
	3.文本属性：font color text-decoration text-align vertical-align breal-word
	4.其他属性（css3）：border-radius box-shadow text-shadow content cursor...

定位：    =定位模式+边偏移   
position: relative;  
top： 80px;
	定位模式：（static） relative absolute fixed (sticky)
	   标准流->静态定位)  相对定位    绝对定位     固定定位 粘性定位
	边偏移：top: 80px; bottom: 80px; left: 80px; right: 80px;
相对定位：1.相对自己原来的位置来移动的，参照物为自己原来的位置
	    2.不脱标，原来在标准流的位置继续占用
绝对定位：   
	1.没有父元素或父元素没有定位，则以浏览器为准定位
	2.父元素有定位，则以最近一级有定位的父元素为准定位
	3.绝对定位脱标，不再占有原先位置，脱标层次比浮动高 

***子绝父相： 一般让相对定位当爹

固定定位：
	1.以浏览器可视窗口为准定位
	2.脱标，不保留位置
    贴版心右侧固定：
	position: fixed;
	left: 50%;
	margin-left: 805px;  利用margin走版心距离一半多
粘性定位：sticky
	 position: sticky;
	 top: 10px; (距离top为10像素就会变成粘性）(可复原）
	1.以浏览器的可视窗口为参照点移动元素（固定定位特点）
	2.占有原先位置（相对定位特点）
	3.必须添加一个位置元素才有效：top,left,right,bottom

定位叠放： z-index: 1 or 2 or 3 or...;  可视优先级
	1.定位盒子的独有属性
	2.值相同则后来者居上

绝对定位和固定定位拓展：
	水平居中显示：不能用margin: auto;
			用left: 50%; margin-left: -50px; 自己盒子的一半
	垂直居中显示： top: 50%; margin-top: -50px; 自己盒子的一半

	定位后 行内元素可设置高宽，块级元素如果不定义高宽就会根据内容展示高宽

	脱标后不会引发margin塌陷

	浮动只会压住标准流盒子而不会压住盒子里的文字和图像
	而绝对定位和固定定位会全压（浮动最初产生的目的是用来做文字环绕的）

如果一个盒子既有left属性又有right属性，则执行left属性
	    既有top属性又有bottom属性，则执行top属性

显示与隐藏：
	***1.display: none;  隐藏        不再占有原来位置
	     display: block; 显示        搭配js可以做很多特效
	2.visibility:visible or hidden;    保留原来位置
	3.overflow: visible or hidden or scroll or auto;    溢出部分的处理
						scroll必有滚动条 auto自动
**eg： .mask { display: none;}  隐藏
    .tudou: hover .mask {display: block;}  显示

精灵图sprites：
	借助于background-position:  一般x,y轴都为负值

字体图标iconfont：  精灵图修改不便
	下载网址：icomoon iconfont
	字体引入：@font-face {
  			font-family: 'icomoon';
  			src:  url('fonts/icomoon.eot?a4uffx');
 			 src:  url('fonts/icomoon.eot?a4uffx#iefix') format('embedded-opentype'),
  			  url('fonts/icomoon.ttf?a4uffx') format('truetype'),
  			  url('fonts/icomoon.woff?a4uffx') format('woff'),
  			  url('fonts/icomoon.svg?a4uffx#icomoon') format('svg');
 			 font-weight: normal;
 			 font-style: normal;
  			font-display: block;
			}
	字体图标使用：打开icomoon网址找到对应的符号并复制写入盒子（span）
	传入字体： span { font-family: 'icomoon'; }  成功
  字体追加：在icomoon网址把压缩包里的.json重新上传，重新下载新压缩包

css三角：
	box {
		width: 0;
		height: 0;
		border: 10px solid transparent;
		border-bottom-color: red;
		}    得出红色倒三角  底部

鼠标样式：    鼠标移到内容上变成光标
	li {cursor: default or pointer or move or text or not-allowed;}
		    小白（默认）   小手     移动       文本        禁止

轮廓线outline:
	input textarea { outline: none or 0;}   取消表单和文本域轮廓线
防止拖动文本域：
	textarea { resize: none;}    取消右下角拖动
    文本域尽量写在同一行

vertical-align:    文字图片对齐，css作用在img上，只对行内块元素和行内元素有效
	img {vertical-align: middle or bottom or top or base;}
				     中部            底部           顶部        基线
		div的用背景做图则需要将div先转化为inline-block
		文本域（行内元素）旁边的注释也可以用vertical-align
	图片底部会有bug空隙，**1.可用vertical-align:top;去除基线对齐bug
				2.可将img转化成display: block;去除对齐属性

溢出文字省略号：
单行文字省略号 1.强制文字一行显示：white-space: nowrap; wrap=不换行 normal=换行
		2.溢出隐藏：overflow: hidden;
		3.超出部分用省略号代替：text-overflow: ellipsis;  ellipsis=省略号
多行文字省略号 1.overflow: hidden;
webkit内核     2.text-overflow: ellipsis;
移动端		3.display: -webkit-box;
		4,-webkit-line-clamp: 2;  第2行开始省略
		5,-webkit-box-orient: vertical;
              （盒子高度需要定死）

提高盒子等级：
	1.position: relative
	2.z-index: 1;

网页布局技巧：
	1： margin负值技巧 取消浮动靠近时的边框重复变粗问题
	2.文字围绕浮动
	3.行内块元素的运用
	4.css三角强化
	.box {
		width: 0;
		height: 0;
		把上边距调大
		border-top: 100px solid transparent;
		border-right: 50px solid skyblue;
		左边和下边的边框设置为0
		border-bottom: 0 solid blue;
		border-left: 0 solid green;
		}
	简写： .box {
		width: 0;
		height: 0;
		border-color: transparent skyblue transparent transparent;
		border-style: solid;
		border-width: 100px 50px 0 0;
		}

css初始化

html5与css3
	html5新增：
		1.<header>
		2.<nav>
		3.artical>
		4.<section>
		5.<aside>
		6.<footer>

		7.<video>    
			<video src="" autoplay="autoplay" muted="muted" 
		controls="contrals" loop="loops" poster="url图片"/><video>
		自动播放           静音        控件     无限循环       加载时显示图片
		8.<audio>
			<audio src="" sutoplay="autoplay" controls="controls"
			 muted="muted"/><audio>

		9.<input type="">  email url data time tel number search color
		  <input type="search" required="required" placeholder=""
		   autofocus="autofacus" autocomplete="off">
		  <input type="file" multiple="multiple"
		required=强制输入
	 **placeholder=无时默认文字 autofacus=自动聚焦
		autocomplete=记录
	 **multiple=多文件选择
		input::placeholder{ color: red;}  伪元素修改默认字体

favicon图标：
	1.将成品png图片转化成ico格式（www.bithug.com）
	2.ico放入根目录
	3.放入head标签中<link rel="shortcut icon" href=" /favicon.ico" />

SEO: search engine optimization 搜索引擎优化
影响着网站的排名

TDK三大标签： title description keyword

LOGO SEO优化：
	1.logo里面首先放h1标签，提权
	2.h1里面放链接可放回首页，链接给loge的背景图片
	3.链接里面放网站名称，但不要外显。（font-size: 0;)
					   或（text-indent: -9999px; overflow: hidden;)
	4.给链接一个title属性，使得鼠标放loge上可以看到提示文字

服务器：
	远程服务器：free.3v.do
	上传网站：cutftp

*****css3新增：
**	 选择器：
		权重是10    1.属性选择器 input[valur] {color: red;}  含有value属性的input
 			    ***input[type="text"] {color: red;}  可属性+值
				div[class^=icon] {color: red;}  以什么开头
				div[class$=data] {color: purple} 以什么结尾
				div[class*=icon] {color: red}    包含什么
			2.结构伪类选择器
				ul li:first-child
				ul li:last-child
				**ul li: nth-child(2)
***			3.nth-child（n）   
				ul li: nth-child(even) {
					background-color: #ccc;}
			even=偶数 odd=奇数

			ul li: nth-child(2n+1) {
				background-color: red;} n从0开始自增
				5n     n+5    -n+5
		区别于：nth-of-type(n) 
		nth-child 会为所有子代标号，再找标签，若号与标签不匹配，则无效
		nth-of-type  会为指定标签的子代标号再找子元素标号

		伪元素选择器：  通过css来创建标签，而不是html,行内元素，html文档中找不到
			element::before    (element里面的 前或后创建）
			element::after     （**权重为1）
******		必须有content属性内容    content: '我是'；
	      element:hover::before {}    鼠标经过element时执行新before

**	字体图标：\e91e
		
		额外标签法伪元素去浮动： clear:both;  额外的必须为块级元素
		伪元素去浮动： .clear::after {
				content: '';
				display: block;
				height: 0;
				clear: both;
				visibility: hidden;
				}
			
		.clearfix: before,.clearfix: after {
			content: "";
			display: table;
			}
		.clearfix: after {
			clear: both;
			}
		.clearfix {
			*zoom: 1;
			}

            <div class="clearfix">
*****	盒子模型：content-box=width+padding+border;border-box=width
*****		box-sizing: border-box;    最终盒子大小为width;

	calc函数：+-*/
		width: calc(100% + 30px);

***	css3过渡:    与:hover相搭配  谁要改变给谁原盒子加
		transition:  属性  花费时间（单位要写s）  （运行曲线  何时开始）
	eg: transition: width .5s , height .5s;
	**eg： all .5s;  用all修改全部

	transform:
	1.	translate移动：    不会影响其他元素位置，对行内元素无效
		transform: translate(x,y); or translateX() or translatrY()  单位px
		transform: translateX(50%) 移动自身的50%

	2.	rotate旋转：
		transform: rotate(50deg);  顺时针旋转45度

		transform-origin: x y;   设置旋转中心 可以是left等方位也可以是像素

	3.	transform: scale(x,y);缩放   
*			不会影响其他盒子且可以设立中心点
		x,y为倍数，写数字不带单位
	可以与图片overflow: hidden;  过渡相结合成效果;

	复合transform: translate() rotate() scale() 有顺序影响

**	动画：  定义动画->调用动画
	1.@keyframes 动画名词 {
		0%{ transform: translateX(0); }
		50%{ transform: translateX(1000px);}
		100%{ transform: translateX(500px);}
	}
  			0%=开始；100%=结束  %是时间的划分
	2.div { width: 200px;
		 height: 200px;
		 background-color: red;
		 margin: 100px auto;
		 animation-name: 动画名称；  调用
		  animation-duration: 持续时间；  时间
 		}
 

	动画属性：
		animation-name,animation-duration,animation-timing-function
		    名称 		运动时间			运动曲线
		animation-delay，animation-iteration-count:1 or 2 or infinite
		   何时开始			重复次数				无限循环

		animation-direction: normal or alternate;
		   是否反方向
		animation-fill-mode:backwards or forwards
		   动画结束后状态
		animation-play-state: running or paused
		   控制动画运动状态（可与:hover搭配）

**	简写animation：name+duration（+function+delay+count+direction+...）
		eg:@keyframes pause { 0%{} 70%{width:40px; height:40px; 
					opacity:1;} 100%{width:70px;height:70px
					opacity: 0;} }
		   div{ wifth: 8px; height: 8px; box-shadow: 0 0 12px #009dfd;
			border-radius: 50%; 
			animation: pause 1.2s linera infinite;
			}

	速度曲线： ease linear ease-in ease-out steps() ease-in-out
		   默认    匀速    慢进   慢出     花几步     慢进慢出
		
		steps()运用：  打字机；奔跑的熊；
			可以对一个盒子整多个动画，用逗号隔开
			animation: bears 1s steps(8), move 3s infinite;

	3D转化transform:比2D多Z轴,Z轴单位用px不用%
		transform:translateZ（100px）;
		transform:translate3d(x,y,z);  xyz可为0，但不能不写
****	透视perspective   越小越明显
	**透视写在被观察元素的上级元素上perspective: 20px;  近大远小

**	3D旋转:    与perspective搭配
		transform:rotateX(45deg); rotateY,rotateZ...
		transform3d(x,y,z,deg);

*****	tramsform-style  控制‘子元素’是否开启3d空间环境
	transform-style: preserve-3d;  flat=平面
	写给观察父级

浏览器私有前缀：
	-moz-:firefox
	-ms-:ie
	-webkit-:safari、chrome
	-o-:Opera






































