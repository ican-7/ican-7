

Git-version control
维护工程蓝图
git init 				初始化目录中本地仓库

git config --global user.name ..
git config --global user.email ..

git config push.default upstream/current	push配置
git config --global alias.xx xxxx	配置别名

git clone http/HHR

git add . 				全部选中（暂存区）
git add 文件名  			选中改文件（暂存区）

git commit -m "备注" 		提交
git commit -a -m ""			跟踪+提交

git status				查看状态
git status -s

git log  				查询历史
git-log				查询简洁历史

git checkout			切换分支
git checkout -b 分支名		创建并切换分支
git checkout HEAD+文件名  	恢复上一次的提交

commit id 校验和    HEAD指针指向

git reset --hard+校验和    	恢复哪一次版本
git reset --hard HEAD~3		回退前三个版本

git reflog				操作记录

git忽略文件--.gitignore		忽略文件
					去github--gitignore
```````````````````````````````````````````````````````````````````````
git remote add <name> <url> 	添加远程仓库
git remote rm <name>		删除远程仓库
git remote -v			列出所有仓库

git fetch <name>/<branch>	连接远程分支
git checkout --track <name>/<branch>	创建并跟踪远程同名分支

**  git branch --set-upstream-to=<name>/<branch>	建立跟踪分支/上游分支
**  git config --global http.sslVerify "false"	解决ssl问题10054
git config push.default upstream			配置push.config
**  git pull --allow-unrelated-histories		没有common base的合并
**  git push

git pull <name> <branch> --allow-unrelated-histories  拉取仓库
git push <远程主机名>  <本地分支名>:<远程分支名>		提交
git push <name> <branch>	远程创建并提交branch

git checkout --track <name>/<branch>		本地建立branch并跟踪远程branch
git checkout <branch>

git push <name> -d <branch>	删除远程分支

`````````````````````````````````````````````````````````````````````````````
git rebase <branch>		线性base、
**永远不要在主分支使用rebase


git tag v1.0.0			打标签
git tag 				查看标签
git push <name> --tags		push标签
git tag -d vx.x.x			删除本地tag
git push <name> -d vx.x.x	删除远程tag
git  checkout vx.x.x		回退检出至tag

git cat-file -p 00d2		查看.git/object下的文件

git merge 分支名  			合并分支
git branch -d 分支名		删除分支
git branch -D 分支名 		强制删除


学linux
ls/ll					查看当前目录
cat  					查看文件内容
touch					创建文件
rm					删除文件

vi					编辑
打开终端，输入vi+文件名，回车，按a或i进入编辑模式，
输入内容，然后按esc键退出编辑模式，输入:wq保存并退出。

版本控制方式：
	集中式-SVN、CVS（中央服务器）
	分布式-Git


git gui   图形界面
git bash 命令行

指令别名：用户目录创建.bashrc文件
配置
alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'
alias ll='ls -al'

解决git bash中文乱码： 
git config --global core.quotepath false
(git_home)/etc/bash.bashrc添加
export LANG="zh_CN.UTF-8"
export LC_ALL="zh_CN.UTF-8"

创建.gitignore 文件，输入不被git控制的文件，*.a是表示.a文件

master上


合并冲突需要自己去手动解决
1.处理冲突
2.add暂存区
3.commit