数组函数：
	join:转换并连接数组中的每个元素为一个    字符串
		var a = [0,1,2,3,4];
		var b = a.join("-");
		<- b=="0-1-2-3-4" ->
	
	length:返回长度
		var a = [1,2,3];
		var b = a.length;
		<- b==3 ->

	reverse:将数组元素颠倒
		var a = [1,2,3];
		var b = a.reverse();
		<- b==[3,2,1] ->

	sort:排序

	filter:过滤元素
		var arr = [1,2,3,4]
		var newArr = arr.filter(items => {
					return items % 2 ===0
				})
		newArr  == [2,4]
	map: 映射
		var nums = [1,2,3]
		var newNums = nums.map(items => items * items)

	rduce: 操作
		var nums = [1,2,3]
		var result = nums.reduce((a,items) => a * items)
	
	concat: 合并
		var arr1 = [1];
		var arr2 = [2];
		var arr3 = arr1.concat(arr2);
				//[1,2]
	includes(): 是否包括/存在，有则返回true

	
*****内置对象
	1.Math	非构造函数
		Math.PI
		Math.max()
		Math.min()
		Math.abs()
		Math.floor()向下取整
		Math.ceil()向上取整
		Math.round()四舍五入
		Math.random() [0,1)随机数
	***	构造随机取整函数：function getRandom(min,max) {
					return Math.floor(Math.random() * 
					(max - min + 1)) + min;
					}
	
	2.Date	构造函数，用new创造对象
		var date = new Date();
		不跟参数返回当前计算机时间
		参数常用写法，数字型： 2022， 12， 31
			***	字符串型： ‘2022-12-31 1:41:14'

		特殊： date.getMonth() 0-11  返回比实际月份小1
		      date.getDay() 0-6  周日返回0
		.getFullYear()当年
		.getMonth()当月
		.getDate()当天
		.getDay()星期
		.getHours()当前小时
		.getMinutes()当前分钟
		.getSeconds()当前秒钟
	
		获得距离1970.1.1多少秒时间:时间戳（单位：毫秒）
			1.valurOf()
			2.getTime()
		**	3.var date1 = +new Date();
		***	4.(H5) Date.now()

		时间戳与时间转化：
			时间->时间戳：+new Date(time);
			时间戳->时间：d = parseInt(总秒/ 60/ 60/ 24);
					h = parseInt(总秒/ 60 /60 %24);
					m = parseInt(总秒/ 60 %60);
					s = parseInt(总秒%60);
				
	3.Array
		new Array(2)  表示创建长度为2的空数组
		new Array(2,3)=[2,3]
		运算符检测是否为数组instanceof
			:1.arr instanceof Array;
			:2.Array.isArray(arr);

		push添加数组：arr.push(4,'pink')	末尾添加
				参数直接写要加入的元素（可多个）
				本身返回值为新数组长度
		unshift添加：arr.unshift(5,'pink')	开头添加
				本身·返回值为新数组长度
		pop删除    ：arr.pop()			末尾删除
				只能删除一个
				本身返回值为删除的那个元素
		shift删除    ：arr.shift()			开头删除
				只能删除一个
				本身返回值为删除的那个元素

		arr.reverse() 翻转数组
		arr.sort()  按首字母大小排序
		arr.sort( function(a,b){return a-b })  升序
		arr.sort( function(a,b){return b-a })  降序
		.indexOf(’元素‘[,可选起始位置])  返回第一个存在元素索引号  没有则返回-1
		.lastIndexOf('元素')返回最后一个存在元素的索引号，没有则返回-1
	
**		字符串变数组：var arr =str.split("分隔符")
		数组变字符串：1.toString()    arr.toString();
				2.join(分隔符) arr.join('-');

	4.String    ->包装
**			->具有不可变性，
			  若修改字符串变量，保留于原空间，将新字符串放在新空间
*****		.indexOf(’元素‘[,可选起始位置])  返回第一个存在元素索引号  没有则返回-1
		.lastIndexOf('元素')返回最后一个存在元素的索引号，没有则返回-1
		.charAt(index)返回字符  eg:str.charAt(3); 
		.charCodeAt(index)返回ASC码
**h5		.str[index]
		
***		字符串操作方法：
			.contact(str1,str2...)
			.substr(start,length)截取字符，从start开始，取length个
			.slice(start,end)
			.substring(start,end)

		.replace(旧，新)  只会替换第一个  可与循环搭配
		
**		字符串变数组：var arr =str.split("断隔符")
		数组变字符串：1.toString()   	 arr.toString();
				2.join(分隔符)	 arr.join('-');
	





































